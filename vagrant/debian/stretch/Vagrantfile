Vagrant.configure('2') do |config|
  # Basic stretch box
  config.vm.define 'stretch', primary: true do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.hostname = 'stretch'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end

  # Stretch with docker installed
  config.vm.define 'stretch-docker' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_docker.sh'
    v.vm.hostname = 'stretch-docker'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end

  # Stretch with nginx test rig
  config.vm.define 'stretch-nginx' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_nginx.sh'
    v.vm.hostname = 'stretch-nginx'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end

  # Stretch with php test rig
  config.vm.define 'stretch-php' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_php.sh'
    v.vm.hostname = 'stretch-php'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end

  # Stretch with puppetserver test rig
  config.vm.define 'stretch-puppetserver' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell',
                   path: 'scripts/debian/stretch/stretch_puppetserver.sh'
    v.vm.hostname = 'stretch-puppetserver'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      vbox.memory = 1024
    end

    v.vm.provider :libvirt do |libvirt|
      libvirt.memory = 1024
    end
  end

  # Stretch with openvpn test rig
  config.vm.define 'stretch-openvpn' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_openvpn.sh'
    v.vm.hostname = 'stretch-openvpn'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      vbox.memory = 1024
    end

    v.vm.provider :libvirt do |libvirt|
      libvirt.memory = 1024
    end
  end

  # Stretch with tinydns test rig
  config.vm.define 'stretch-tinydns' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_tinydns.sh'
    v.vm.hostname = 'stretch-tinydns'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      vbox.memory = 1024
    end

    v.vm.provider :libvirt do |libvirt|
      libvirt.memory = 1024
    end
  end

  # Stretch with extra disks
  config.vm.define 'stretch-disks' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.hostname = 'stretch-disks'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      # Create 2 additional disks to be used in testing disk setup
      (0...2).each do |d|
        disk_file = "#{v.vm.hostname}_disk#{d}.vdi"
        unless File.exist?(disk_file)
          vbox.customize ['createhd', '--filename', disk_file, '--size', 5120]
        end
        # Note we connect to a port +1 as port 0 has the root disk
        vbox.customize ['storageattach', :id, '--storagectl', 'SATA Controller',
                        '--port', d + 1, '--device', 0, '--type', 'hdd',
                        '--medium', disk_file]
      end
    end
    v.vm.provider :libvirt do |libvirt|
      # Create 2 additional disks to be used in testing disk setup
      libvirt.storage :file, size: '5M'
      libvirt.storage :file, size: '5M'
    end
  end

  # Stretch with a software raid setup
  config.vm.define 'stretch-raid' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/stretch/stretch_raid.sh'
    v.vm.hostname = 'stretch-raid'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      # Create 9 additional disks to be used in testing RAID
      (0...9).each do |d|
        disk_file = "#{v.vm.hostname}_disk#{d}.vdi"
        unless File.exist?(disk_file)
          vbox.customize ['createhd', '--filename', disk_file, '--size', 5120]
        end
        # Note we connect to a port +1 as port 0 has the root disk
        vbox.customize ['storageattach', :id, '--storagectl', 'SATA Controller',
                        '--port', d + 1, '--device', 0, '--type', 'hdd',
                        '--medium', disk_file]
      end
    end

    v.vm.provider :libvirt do |libvirt|
      9.times do
        # Create 9 additional disks to be used in testing RAID
        libvirt.storage :file, size: '5M'
      end
    end
  end

  # Stretch with drbd host one
  config.vm.define 'stretch-drbd1' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/deb_drbd.sh'
    v.vm.hostname = 'stretch-drbd1'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      # Create 2 additional disks for DRBD
      (0...2).each do |d|
        disk_file = "#{v.vm.hostname}_disk#{d}.vdi"
        unless File.exist?(disk_file)
          vbox.customize ['createhd', '--filename', disk_file, '--size', 5120]
        end
        # Note we connect to a port +1 as port 0 has the root disk
        vbox.customize ['storageattach', :id, '--storagectl', 'SATA Controller',
                        '--port', d + 1, '--device', 0, '--type', 'hdd',
                        '--medium', disk_file]
      end
    end
    v.vm.provider :libvirt do |libvirt|
      # Create 2 additional disks for DRBD
      libvirt.storage :file, size: '5M'
      libvirt.storage :file, size: '5M'
    end
  end

  # Stretch with drbd host two
  config.vm.define 'stretch-drbd2' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell', path: 'scripts/debian/deb_drbd.sh'
    v.vm.hostname = 'stretch-drbd2'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3

    v.vm.provider 'virtualbox' do |vbox|
      # Create 2 additional disks for DRBD
      (0...2).each do |d|
        disk_file = "#{v.vm.hostname}_disk#{d}.vdi"
        unless File.exist?(disk_file)
          vbox.customize ['createhd', '--filename', disk_file, '--size', 5120]
        end
        # Note we connect to a port +1 as port 0 has the root disk
        vbox.customize ['storageattach', :id, '--storagectl', 'SATA Controller',
                        '--port', d + 1, '--device', 0, '--type', 'hdd',
                        '--medium', disk_file]
      end
    end
    v.vm.provider :libvirt do |libvirt|
      # Create 2 additional disks for DRBD
      libvirt.storage :file, size: '5M'
      libvirt.storage :file, size: '5M'
    end
  end

  # Stretch with gvpe host one
  config.vm.define 'stretch-gvpe1' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell',
                   path: 'scripts/debian/deb_gvpe.sh',
                   args: [
                     IP_ADDRESSES['stretch-gvpe1'],
                     IP_ADDRESSES['stretch-gvpe2']
                   ]
    v.vm.hostname = 'stretch-gvpe1'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end

  # Stretch with gvpe host two
  config.vm.define 'stretch-gvpe2' do |v|
    v.vm.box = 'debian/stretch64'
    v.vm.provision 'shell', path: 'scripts/debian/deb_default.sh'
    v.vm.provision 'shell',
                   path: 'scripts/debian/deb_gvpe.sh',
                   args: [
                     IP_ADDRESSES['stretch-gvpe1'],
                     IP_ADDRESSES['stretch-gvpe2']
                   ]
    v.vm.hostname = 'stretch-gvpe2'
    v.vm.network 'private_network',
                 ip: IP_ADDRESSES[v.vm.hostname],
                 libvirt__dhcp_enabled: false
    v.vm.synced_folder '.', '/vagrant', type: 'nfs', nfs_version: 3
  end
end
